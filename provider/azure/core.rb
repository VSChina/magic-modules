# Copyright 2019 Microsoft Corp.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'provider/azure/example/example'

module Provider
  module Azure
    module Core

      def get_example_by_reference(reference)
        get_example_by_names reference.example, reference.product
      end

      def get_example_by_names(example_name, product_name = nil)
        resource_dir = get_resource_dir(File.dirname(@config.config_file))
        resource_dir = File.join(File.dirname(resource_dir), product_name) unless product_name.nil?
        spec_dir = get_spec_dir(resource_dir)
        example_yaml = File.join(spec_dir, 'examples', @provider, "#{example_name}.yaml")
        example = Google::YamlValidator.parse(File.read(example_yaml))
        raise "#{example_yaml}(#{example.class}) is not Provider::Azure::Example" unless example.is_a?(Provider::Azure::Example)
        example.validate
        example
      end

      # The folder structure generated by autorest.cli is different than the magic-module-spec folder
      # structure, where autorest.cli has one more subdirectory named after `package-YY-MM-DD` for each
      # resource, which contains the content otherwise had been placed directly under the resource_dir
      # in magic-module-spec.
      #
      # Given a `config_dir` and return the `resource_dir` taking *package-xxx* subdirectory
      # into consideration.
      def get_resource_dir(config_dir)
        return File.dirname(config_dir) if /^package-[\d-]+(-preview)?$/ =~ File.basename(config_dir)

        config_dir
      end

      # Given a `resource_dir` and return the `config_dir` taking *package-xxx* subdirectory
      # into consideration.
      # NOTE: currently we assume there is at most only one subdirectory.
      def get_spec_dir(resource_dir)
        potential_subdir = Dir.glob(File.join(resource_dir, 'package-[0-9-]*'))[0]
        potential_subdir.nil? ? resource_dir : potential_subdir
      end

      def get_custom_template_path(template_path)
        return nil if template_path.nil?
        spec_dir = File.dirname(@config.config_file)
        File.join(spec_dir, template_path)
      end

    end
  end
end
